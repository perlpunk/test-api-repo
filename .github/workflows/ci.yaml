# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - run: env | sort
#       - name: check in progress
#         run: |
#             curl -L \
#               -X POST \
#               -H "Accept: application/vnd.github+json" \
#               -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
#               -H "X-GitHub-Api-Version: 2022-11-28" \
#               https://api.github.com/repos/perlpunk/test-api-repo/check-runs \
#               -d '{"name":"mighty_readme","head_sha":"'$GITHUB_SHA'","status":"in_progress","external_id":"42","started_at":"2023-05-04T01:14:52Z","output":{"title":"Mighty Readme report","summary":"lala","text":"some text"}}'
# 
#       - name: check success
#         run: |
#             sleep 10
#             curl -L \
#               -X POST \
#               -H "Accept: application/vnd.github+json" \
#               -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
#               -H "X-GitHub-Api-Version: 2022-11-28" \
#               https://api.github.com/repos/perlpunk/test-api-repo/check-runs \
#               -d '{"name":"mighty_readme","head_sha":"'$GITHUB_SHA'","status":"completed","conclusion":"success","external_id":"42","started_at":"2023-05-04T01:14:52Z","output":{"title":"Mighty Readme report","summary":"lala","text":"some text"}}'

#       - run: |
#           echo "$GITHUB_REF_NAME"
#           echo "${GITHUB_REF_NAME/\/merge}"
#           [[ "$GITHUB_EVENT_NAME" == pull_request ]] && curl -L \
#               -X POST \
#               -H "Accept: application/vnd.github+json" \
#               -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
#               -H "X-GitHub-Api-Version: 2022-11-28" \
#               "https://api.github.com/repos/$GITHUB_REPOSITORY/issues/${GITHUB_REF_NAME/\/merge}/comments" \
#               -d '{"body":"There is no spoon"}'

      - run: |
            [ "$GITHUB_EVENT_NAME" == pull_request ]] || exit
            date=$(date)
            body="There is no spoon"$'\n'"Date: $date"
            comments=$(curl -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/$GITHUB_REPOSITORY/issues/${GITHUB_REF_NAME/\/merge}/comments)
            echo "Comments: $comments"
            comment_id=$(echo "$comments" | jq '.[] | select(.user.login == "github-actions[bot]")| select(.body | contains("There is no spoon")) | .id ' | head -1)
            echo "id: $comment_id"
            set -x
            if [[ -n "$comment_id" ]]; then
              method=PATCH
              url="https://api.github.com/repos/$GITHUB_REPOSITORY/issues/comments/$comment_id"
            else
              method=POST
              url="https://api.github.com/repos/$GITHUB_REPOSITORY/issues/${GITHUB_REF_NAME/\/merge}/comments"
            fi
            curl -L \
                -X "$method" \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
                -H "X-GitHub-Api-Version: 2022-11-28" \
                "$url" \
                -d '{"body":"'"$body"'"}'
            fi
